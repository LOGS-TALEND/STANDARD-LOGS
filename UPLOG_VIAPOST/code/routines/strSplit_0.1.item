package routines;

public class strSplit {

	public static String strgSplit(String message) {
		if (message == null || message.trim().isEmpty()) {
			return "";
		}
		StringBuilder myStr = new StringBuilder();
		int starInd = 0;
		int endInd = starInd + 70;
		while (endInd < message.length()) {
			String subStr = message.substring(starInd, endInd);
			myStr.append(subStr + "\n");
			starInd = endInd;
			if (starInd + 70 >= message.length()) {
				subStr = message.substring(starInd, message.length() - 1);
				myStr.append(subStr + "\n");
				return myStr.toString();
			} else {
				endInd = starInd + 70;
			}
		}
		return myStr.toString();
	}

	public static int linesNo(String message) {
		if (message == null || message.trim().isEmpty()) {
			return 0;
		}
		int lineNo = (int) Math.ceil((message.length() / 70.0));

		return lineNo;
	}

	public static String addLineNo(String message, String lineNo) {
		if (message == null || message.trim().isEmpty()) {
			return "";
		}
		StringBuilder strUpdated = new StringBuilder();
		String[] divStr = message.split("\\r?\\n");
		int Count = Integer.parseInt(lineNo);
		strUpdated.append(String.valueOf(Count) + divStr[0]);
		for (int i = 1; i < divStr.length; i++) {
			Count++;
			strUpdated.append("\n" + "0" + String.valueOf(Count) + divStr[i]);
		}
		return strUpdated.toString();
	}

	public static int strToInt(String lineNo) {
		if (lineNo == null || lineNo.trim().isEmpty()) {
			return 0;
		}
		return Integer.parseInt(lineNo);
	}

	public static String intToStr(int lineNo) {

		return String.valueOf(lineNo);
	}
}
