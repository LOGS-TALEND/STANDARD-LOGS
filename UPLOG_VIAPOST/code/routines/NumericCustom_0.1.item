// ============================================================================
//
// Copyright (c) 2006-2014, Talend Inc.
//
// This source code has been automatically generated by_Talend Data Management Platform
// CodeGenerator version 7.3.1.20201125_1449-patch
// You can find more information about Talend products at www.talend.com.
// You may distribute this code under the terms of the GNU LGPL license
// http://www.gnu.org/licenses/lgpl.html).
//
// ============================================================================
package routines;

import java.util.concurrent.ConcurrentHashMap;

public class NumericCustom {

    private static final java.util.Map<String, Integer> seq_Hash = new ConcurrentHashMap<>();

    /**
     * return an incremented numeric id
     *
     * {talendTypes} int | Integer
     *
     * {Category} Numeric
     *
     * {param} string("s1") sequence identifier
     *
     * {param} int(1) start value
     *
     * {param} int(1) step
     *
     * {example} sequence("s1", 1, 1) # 1, 2, 3, ...
     *
     * {example} sequence("s2", 100, -2) # 100, 98, 96, ...
     *
     */
    public static Integer sequence(String seqName, int startValue, int step) {
        return seq_Hash.compute(seqName,
                (String k,  Integer v) -> v == null ? startValue : v + step);
    }

    /**
     * create a sequence if not exists and put a new startValue
     *
     * {Category} Numeric
     *
     * {param} string("s1") sequence identifier
     *
     * {param} int(1) start value
     *
     * {example} sequence("s1", 1)
     *
     */

    public static int resetSequence(String seqName, int startValue) {
        seq_Hash.put(seqName, startValue);
        
        return startValue;
        
    }

    /**
     * remove a sequence
     *
     * {Category} Numeric
     *
     * {param} string("s1") sequence identifier
     *
     * {example} sequence("s1")
     *
     */

    public static void removeSequence(String seqName) {
        seq_Hash.remove(seqName);
    }
    
    // Prend 2 strings en entrée, les convertit en nombres et renvoie 
    // un résultat de comparaison
    public static int convertAndCompare(String s1, String s2) {
    	return Integer.compare(Integer.parseInt(s1), Integer.parseInt(s2));
    }
}
